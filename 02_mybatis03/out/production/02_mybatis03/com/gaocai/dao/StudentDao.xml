<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gaocai.dao.StudentDao">

    <select id="getAll" resultType="Student">
        select * from tbl_student
    </select>

    <select id="getById" parameterType="String" resultType="com.gaocai.domain.Student">
        select * from tbl_student where id = #{id}
    </select>

    <insert id="save" parameterType="com.gaocai.domain.Student">
        insert into tbl_student(id,name,age) values (#{id},#{name},#{age})
    </insert>

    <select id="select1" parameterType="java.lang.String" resultType="com.gaocai.domain.Student">
        select * from tbl_student where id = #{id}
    </select>

    <select id = "select2" parameterType="int" resultType="Student">
        select * from tbl_student where age = #{age}
    </select>

<!--    <select id="select3" parameterType="" resultType="Student">-->
<!--        select * from tbl_student where name = #{name} and age = #{age}-->
<!--    </select>-->
    <select id="select4" parameterType="Student" resultType="Student">
        select * from tbl_student where name = #{name} and age = #{age}
    </select>

    <select id="select5" parameterType="map" resultType="Student">
        select * from tbl_student where name = #{name} and age = #{age}
    </select>

    <select id = "select6" resultType="Student">
        select * from tbl_student where id = '${value}'
    </select>

    <select id="select7" resultType="Student">
        select * from tbl_student where name like '%${value}%'
    </select>

    <select id="select8" resultType="Student">
        select * from tbl_student where name like #{value}
    </select>

    <select id="select9" resultType="Student">
        select * from tbl_student where name like '%' #{value} '%'  /*空格相当于加号*/
    </select>

    <select id="select10" resultType="String">
        select name from tbl_student where id = #{i}
    </select>

    <select id="select11" resultType="String">
        select name from tbl_student
    </select>

    <select id="select12" resultType="int">
        select count(*) from tbl_student
    </select>

    <select id="select13" resultType="map">
        select name,count(*) from tbl_student group by name
    </select>

    <select id="select14" resultType="Student">
        select id, fullname as name,age from tbl_student
    </select>

    <!--
        id: resultMap标签对的唯一标识
            将来在使用到该resultMap标签的时候，使用id来找打这组标签

       type:指定一个类型，与数据库表一一对应，建立起表字段和类属性的名字一一匹配关系。
    -->
    <resultMap id="stuMap" type="Student">
        <!--
            id标签：用来配置主键对应的关系
            result标签：用来配置普通字段对应的关系

            对于tbl_student表，表结果是一个id，两个普通字段
            所有我们需要一个id标签，两个result标签

            property属性：配置的是类中的属性名
            column属性：配置的是表中的字段名

            这样就能够建立起类和表字段一一对应的关系了
        -->
        <id property="id" column="id"/>
        <result property="name" column="fullname"/>
        <result property="age" column="age"/>
    </resultMap>

    <select id="select16" resultMap="stuMap">
        select * from tbl_student
    </select>

    <select id="select17" resultType="Student">
        select * from tbl_student
        <!--
            where标签：
            当where标签在使用得到时候，必须要搭配where标签对中的if标签来使用，
            通过if标签的判断，如果有查询条件，则展现的where关键字，如果没有查询条件，则不展现where关键字

            where 标签会自动频闭掉第一个and/or
        -->
        <where>
            <if test="name!=null and name!=''">
                name like '%' #{name} '%'
            </if>
            <if test="address!=null and address!=''">
                and address like '%' #{address} '%'
            </if>
        </where>

    </select>

    <select id="select18" resultType="Student">
        select * from tbl_student
        where id in
         <!--
            foreach 标签，用来遍历传递过来的数组参数

            collection:标识传递参数的类型
                    array:数组
                    list:集合
            item:每一次遍历出来的元素，在使用该元素的时候，需要套用在#{}中
            open:拼接循环的开始符号
            close：拼接循环的结束符号
            separator：元素与元素之间的分隔符
         -->
        <foreach collection="array" item="ids" open="(" close=")" separator=",">
            #{ids}
        </foreach>
    </select>

<!--  \
    使用sql标签，制作sql片段
    sql片段的租用是代替sql语句中的代码
    如果你的mapper映射文件中的sql语句中的某些代码出现大量的重复，我们可以使用sql片段来代替他们

    id：sql片段的唯一标识，将来找到sql片段使用id来进行定位
 -->
    <sql id="sql1">
        select * from tbl_student
    </sql>

    <select id="select19" resultType="Student">
        <include refid="sql1"></include> where id = #{a}
    </select>

    <select id="select20" resultType="map">
        select
        s.name sname,
        c.name cname
        from tbl_student s
        join tbl_classroom c
        on s.classroomId = c.id
    </select>

    <select id="select21" resultType="com.gaocai.vo.StudentAndClassroomVo">
        select
        s.id sid,
        s.name sname,
        s.address saddress,
        c.id cid,
        c.name cname
        from tbl_student s
        join tbl_classroom c
        on s.classroomId = c.id

    </select>

    <select id="select22" resultType="com.gaocai.vo.StudentAndClassroomVo">
        select
        s.id sid,
        s.name sname,
        s.age sage,
        s.address saddress,
        c.id cid,
        c.name cname
        from tbl_student s
        join tbl_classroom c
        on s.classroomId = c.id
        where s.name like '%' #{name} '%'
    </select>
</mapper>