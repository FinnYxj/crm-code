<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <properties resource="db.properties"/>

    <!--
        设置与数据库交互的环境
        例如可以在此处配置二级缓存，配置查询延迟加载策略等等。。。
            配置的目的时为了更加有效的查询表中的记录

        在实际项目中setting的设置基本不用
        因为settings对于查询的优化，得到的效果不明显

        对于海量的数据，使用settings配置优化，起不到任何作用
        对于效果量较少的项目，对于查询的效果要求低，也没有必要使用settings配置

        如果遇到了海量级别的数据，我们如何提高查询效率呢？

        基础操作：
            对于常用的查询条件字段，设置索引（普通索引，位图索引）

        高级操作
            使用nosql数据库，redis（缓存数据库）

        专业操作
            搜索引擎：Elasticsearch与Solr
            针对于电商行业


    -->
   <!-- <settings>
        <setting name="" value=""/>
    </settings>-->

    <!--
        为mapper映射文件中的domain起别名
    -->
    <typeAliases>
        <!--
            方式一：
                为指定类分别起别名，别名的命名由我们自己决定

                type：要为那个domain起别名 填写包，类名称
                alias：别名的名字
        -->
<!--        <typeAlias type="com.gaocai.domain.Student" alias="stu"/>-->

        <!--
            方式二：
                使用package标签批量起别名
                别名时mybatis默认起好的，命名不是由我们决定，别名为类名（类名的字母不区分大小写）

                name：指定一个包结构，表示在该包下，所有的domain自动起了别名
        -->
        <package name="com.gaocai.domain"/>
    </typeAliases>

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <!--<mapper resource="com/gaocai/dao/StudentDao.xml"/>-->
        <!--
            方式一：
                使用resource属性，指定mapper映射文件
        -->

        <!--方式二：
            使用class属性，找到dao层接口的全路径
            -->
<!--        <mapper class="com.gaocai.dao.StudentDao"/>-->

        <!--
            方法三：
                批量注册：
                    name属性，指向dao层的包，表示在该dao包下，所有的mapper映射文件都自动注册
        -->
        <package name="com.gaocai.dao"/>
    </mappers>

</configuration>